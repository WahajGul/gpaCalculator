// const inputs = [];
const loadPrev = document.querySelector("#loadPrevious");

const form002 = document.querySelector("#form002");

const genP = () => {
	console.log("gen Pdf event");
	const element = document.getElementById("tableContainer");
	const options = {
		margin: 10,
		filename: "my_document.pdf",
		image: { type: "jpg", quality: 0.98 },
		html2canvas: { useCORS: true, scale: 2 },
		jsPDF: { unit: "mm", format: "a4", orientation: "portrait" },
	};
	html2pdf().from(element).set(options).save();
};

form001.onsubmit = (e) => {
	e.preventDefault();
	const NoOfSubjectsI = parseInt(document.querySelector("#NoOfSubjects").value);
	const noOfLabsI = parseInt(document.querySelector("#noOfLabs").value);

	const nameInput = document.querySelector("#name");
	const idInput = document.querySelector("#id");

	localStorage.setItem("NoOfSubjectsI", JSON.stringify(NoOfSubjectsI));
	localStorage.setItem("NoOfLabsI", JSON.stringify(noOfLabsI));

	console.log(
		JSON.parse(localStorage.getItem("NoOfSubjectsI")) +
			" " +
			JSON.parse(localStorage.getItem("NoOfLabsI")),
	);

	if (!NoOfSubjectsI || !noOfLabsI) {
		alert("invalid number");
	}

	if (!name || !id) {
		alert("name or id missing disabling pdf generation");
		document.querySelector("#genPdfBtn").disabled = true;
	}

	console.log(NoOfSubjectsI + " " + noOfLabsI);
	// alert(NoOfSubjectsI + " " + noOfLabsI);
	addInputs(form002, NoOfSubjectsI, noOfLabsI);
	document.querySelector("#form001 button").disabled = true;
};

form002.onsubmit = (e) => {
	e.preventDefault();
	const g = objFromInputs(
		Array.from(document.querySelectorAll("#form002 input")),
	);
	localStorage.setItem("marksTable", JSON.stringify(g));
	console.log(g);
	addTable(g);
	document.querySelector("#genPdfBtn").disabled = false;
};

const addInputs = (form, NoOfSubjects, noOfLabs) => {
	for (i = 0; i < NoOfSubjects; i++) {
		const inputTag = document.createElement("input");
		inputTag.type = "text";
		inputTag.placeholder = "Sub Name";
		inputTag.id = `subName${i}`;

		const inputTagGr = document.createElement("input");
		inputTagGr.type = "number";
		inputTagGr.placeholder = "Sub marks";
		inputTagGr.id = `subMarks${i}`;

		const inputTagCr = document.createElement("input");
		inputTagCr.type = "number";
		inputTagCr.placeholder = "Sub CR";
		inputTagCr.id = `SubCr${i}`;
		inputTagCr.value = 3.0;

		form.appendChild(inputTag);
		form.appendChild(inputTagGr);
		form.appendChild(inputTagCr);
	}

	for (i = 0; i < noOfLabs; i++) {
		const inputTag = document.createElement("input");
		inputTag.type = "text";
		inputTag.placeholder = "Lab Name";
		inputTag.id = `labName${i}`;

		const inputTagGr = document.createElement("input");
		inputTagGr.type = "number";
		inputTagGr.placeholder = "Lab Marks(percentage)";
		inputTagGr.id = `labMarks${i}`;

		const inputTagCr = document.createElement("input");
		inputTagCr.type = "number";
		inputTagCr.placeholder = "Lab CR";
		inputTagCr.id = `labCr${i}`;
		inputTagCr.value = 1.0;

		form.appendChild(inputTag);
		form.appendChild(inputTagGr);
		form.appendChild(inputTagCr);
	}
	const subBtn = document.createElement("button");
	subBtn.type = "submit";
	subBtn.textContent = "Calculate";
	form.appendChild(subBtn);
};

const addTable = (g) => {
	console.log(g);
	let sumOfGrade = 0;
	let sumOfCr = 0;
	for (i = 0; i < g.length; i++) {
		sumOfGrade += g[i].gradepoint;
		sumOfCr += g[i].cr;
	}
	const div = document.createElement("div");
	div.className = "container002";
	document.querySelector(".container").appendChild(div);
	div.className = "container02";
	div.id = "tableContainer";
	div.innerHTML = `
    ${checkNameAndID()}
        <table id="marksTable">
          <thead>
            <tr>
              <th>Name</th>
              <th>Perc(%)</th>
              <th>Grade</th>
              <th>CR</th>
              <th>GP</th>
            </tr>
          </thead>
          <tbody>
        ${g
					.map((row) => {
						return `
                <tr>
                <td>${row.name}</td>
                <td>${row.marks}%</td>
                <td>${row.grade}</td>
                <td>${row.cr}</td>
                <td>${row.gradeValue} x ${row.cr} = ${row.gradepoint.toFixed(2)}</td>
                </tr>
                `;
					})
					.join("")}
          </tbody>
        <tfoot>
        <tr>
        <th>Total</th>
        <th colspan="4">${Math.floor(sumOfGrade * 100) / 100} / ${Math.floor(sumOfCr * 100) / 100} = ${Math.floor((sumOfGrade / sumOfCr) * 100) / 100}</th>
        </tr>
        </tfoot>
        </table>
        <p>unofficial transcript generated by <a href="https://wahajgul.github.io/gpaCalculator/">GPA Calculator</a> </p>
    `;
};

loadPrev.onclick = () => {
	if (JSON.parse(localStorage.getItem("marksTable"))) {
		addTable(JSON.parse(localStorage.getItem("marksTable")));
		document.querySelector("#genPdfBtn").disabled = false;
	} else {
		alert("not available");
	}
};

const objFromInputs = (array) => {
	console.log(array);
	const temp = [];
	for (i = 0; i < array.length; i += 3) {
		let marks = parseInt(array[i + 1].value);
		let grade = marksToGrade(marks);
		const obj = {
			name: array[i].value,
			marks: marks,
			grade: grade,
			gradeValue: gradeToNumber(grade),
			gradepoint: gradeToNumber(grade) * parseInt(array[i + 2].value),
			cr: parseInt(array[i + 2].value),
		};
		temp.push(obj);
	}
	return temp;
};

function gradeToNumber(grade) {
	switch (grade) {
		case "F":
			return 0;
		case "D":
			return 1.0;
		case "D+":
			return 1.33;
		case "C-":
			return 1.66;
		case "C":
			return 2.0;
		case "C+":
			return 2.33;
		case "B-":
			return 2.66;
		case "B":
			return 3.0;
		case "B+":
			return 3.33;
		case "A-":
			return 3.66;
		case "A":
			return 4.0;
		default:
			alert("invalid input using 0 instead");
			return 0;
	}
}

function marksToGrade(marks) {
	if (marks >= 91) {
		return "A";
	} else if (marks >= 80 && marks < 91) {
		return "A-";
	} else if (marks >= 75 && marks < 80) {
		return "B+";
	} else if (marks >= 71 && marks < 75) {
		return "B";
	} else if (marks >= 68 && marks < 71) {
		return "B-";
	} else if (marks >= 64 && marks < 68) {
		return "C+";
	} else if (marks >= 61 && marks < 64) {
		return "C";
	} else if (marks >= 58 && marks < 61) {
		return "C-";
	} else if (marks >= 54 && marks < 58) {
		return "D+";
	} else if (marks >= 50 && marks < 54) {
		return "D";
	} else if (marks < 50) {
		return "F";
	} else {
		alert("invalid using F instead");
		return "F";
	}
}

function checkNameAndID() {
	let name = document.getElementById("name");
	let id = document.getElementById("id");
	if (name.value && id.value) {
		return ` 
    <div id="logo">

    <img id="smiuLogo" src="logo.jpg"/>
        <h2>Sindh Mederssatul Islam University</h2>
            </div>
    <h4>Name : ${name.value} </h4>
    <h4>ID : ${id.value} </h4>
    <h4>Date : ${new Date()} </h4>
        `;
	} else {
		alert("name or id is invalid disabling generate pdf button");
		return "";
	}
}
